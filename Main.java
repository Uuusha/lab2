import java.io.PrintStream;
import java.util.Scanner;

public class Main {
    public static Scanner in = new Scanner(System.in);
    public static PrintStream out = System.out;
    public static void main(String[] args) {
        //–°—á–∏—Ç—ã–≤–∞–µ—Ç —Å –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑–º–µ—Ä—ã –º–∞—Å—Å–∏–≤–∞ ùëÅ –∏ M
        int n = in.nextInt();
        int m = in.nextInt();
        String [][] s = new String[n][m];

        //–∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —Ä–∞–∑–º–µ—Ä–æ–º ùëÅ √ó M
        s[0][0] = in.nextLine();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                s[i][j] = in.nextLine();
            }
        }

        // –ó–∞—Ç–µ–º —Å—á–∏—Ç—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ ùêæ.
        double k = in.nextDouble();

        // –î–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è ùë• = ùêæ –≤—ã—á–∏—Å–ª—è–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç
        //—Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∂–¥–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤–µ.
        double o;
        char a = s[0][0].charAt(0);
        char b = s[0][0].charAt(3);
        double [] os = new double[n]; //–°—É–º–º–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a = s[i][j].charAt(0);
                b = s[i][j].charAt(3);
                if (s[i][j].charAt(2) == '+') {
                    o = ((int)a - '0') * k + ((int)b-'0');
                    out.print(o + " ");
                }
                else {
                    if (s[i][j].charAt(2) == '-') {
                        o = ((int)a - '0') * k - ((int)b-'0');
                        out.print(o + " ");
                    }
                    else {
                        if (s[i][j].charAt(2) == '*') {
                            o = ((int)a - '0') * k * ((int)b-'0');
                            out.print(o + " ");
                        }
                        else {
                            if (b == '0'){
                                out.print("–Ω–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å ");
                                o = 0;
                            }
                            else {
                                o = (((int) a - '0') * k) / ((int) b - '0');
                                out.print(o + " ");
                            }
                        }
                    }
                }
                os[i] = os[i] + o;

            }
            out.println();
        }


        //–°–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –º–∞—Å—Å–∏–≤–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        //–≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –¥–∞–Ω–Ω–æ–º ùë•.
        double x;
        String [] y;

        for (int j = 0; j < n - 1; j++){
            for (int i = 0; i < n - 1; i++) {
                if(os[i] > os[i + 1]) {
                    x = os[i];
                    os[i] = os[i+1];
                    os[i+1] = x;

                    y = s[i];
                    s[i] = s[i+1];
                    s[i+1] = y;

                }
            }

        }


        //–í—ã–≤–æ–¥–∏—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞, –∑–∞–º–µ–Ω—è—è –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ùë• –Ω–∞
        //–µ—ë –∫–≤–∞–¥—Ä–∞—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏
        //–¥–∞–Ω–Ω–æ–º ùë•. 
        k = k *k;
        double maxO = 0;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a = s[i][j].charAt(0);
                b = s[i][j].charAt(3);
                if (s[i][j].charAt(2) == '+') {
                    o = ((int)a - '0') * k + ((int)b-'0');
                    maxO = o;
                    out.print(a);
                    out.print("*");
                    out.print(k);
                    out.print(s[i][j].charAt(2));
                    out.print(b + " ");
                    out.print(o + " ");
                }
                else {
                    if (s[i][j].charAt(2) == '-') {
                        o = ((int)a - '0') * k - ((int)b-'0');
                        maxO = o;
                        out.print(a);
                        out.print("*");
                        out.print(k);
                        out.print(s[i][j].charAt(2));
                        out.print(b + " ");
                        out.print(o + " ");
                    }
                    else {
                        if (s[i][j].charAt(2) == '*') {
                            o = ((int)a - '0') * k * ((int)b-'0');
                            maxO = 0;
                            out.print(a);
                            out.print("*");
                            out.print(k);
                            out.print(s[i][j].charAt(2));
                            out.print(b + " ");
                            out.print(o + " ");
                        }
                        else {
                            if (b == '0'){
                                o = 0;
                                maxO = o;
                                out.print(a);
                                out.print("*");
                                out.print(k);
                                out.print(s[i][j].charAt(2));
                                out.print(b + " ");
                                out.print("–Ω–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å ");
                            }
                            else {
                                o = (((int) a - '0') * k) / ((int) b - '0');
                                maxO = o;
                                out.print(a);
                                out.print("*");
                                out.print(k);
                                out.print(s[i][j].charAt(2));
                                out.print(b + " ");
                                out.print(o + " ");
                            }
                        }
                    }
                }

            }
            out.println();
        }

        //–ù–∞—Ö–æ–¥–∏—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º
        //—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø—Ä–∏ –¥–∞–Ω–Ω–æ–º x
        String max = "";

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a = s[i][j].charAt(0);
                b = s[i][j].charAt(3);
                if (s[i][j].charAt(2) == '+') {
                    o = ((int)a - '0') * k + ((int)b-'0');
                    if (o >= maxO) {
                        max = s[i][j];
                        maxO = o;
                    }
                }
                else {
                    if (s[i][j].charAt(2) == '-') {
                        o = ((int)a - '0') * k - ((int)b-'0');
                        if (o >= maxO) {
                            max = s[i][j];
                            maxO = o;
                        }
                    }
                    else {
                        if (s[i][j].charAt(2) == '*') {
                            o = ((int)a - '0') * k * ((int)b-'0');
                            if (o >= maxO) {
                                max = s[i][j];
                                maxO = o;
                            }
                        }
                        else {
                            if (b == '0'){
                                o = 0;
                            }
                            else {
                                o = (((int) a - '0') * k) / ((int) b - '0');
                            }
                            if (o >= maxO) {
                                max = s[i][j];
                                maxO = o;
                            }
                        }
                    }
                }

            }

        }
        out.print(max);
    }
}
